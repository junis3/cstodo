# This is a basic workflow to help you get started with Actions

name: Deploy to EC2

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@master

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-stage-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-

      - name: Install Dependencies
        run: yarn

      - name: Build
        run: yarn build

      - name: Zip build result
        run: zip build-${{ github.run_number }}.zip -r ./build

      - name: Upload build result to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_S3_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-northeast-2
        run: |
          aws s3 cp build-${{ github.run_number }}.zip s3://cstodo-deploy/live/

      - name: Apply the change from the remote machine
        uses: appleboy/ssh-action@master
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_S3_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-northeast-2
          ZIP_FILE_NAME: build-${{ github.run_number }}.zip
        with:
          host: ${{ secrets.MACHINE_HOST }}
          username: ${{ secrets.MACHINE_USER }}
          key: ${{ secrets.MACHINE_PRIVATE_KEY }}
          envs: AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY,AWS_DEFAULT_REGION,ZIP_FILE_NAME
          script: |
            cd cstodo
            rm -rf ./build || true
            mkdir ./build
            aws s3 cp s3://cstodo-deploy/live/$ZIP_FILE_NAME ./
            rm .env || true
            aws s3 cp s3://cstodo-deploy/env/live/.env ./
            rm ecosystem.config.js || true
            aws s3 cp s3://cstodo-deploy/env/live/ecosystem.config.js ./
            unzip $ZIP_FILE_NAME
            rm $ZIP_FILE_NAME
            yarn pm2 restart cstodo
